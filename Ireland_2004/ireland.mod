// "Solving Ireland (2004) using Dynare"
// Code by Diego Vil√°n 
// Georgetown University


%----------------------------------------------------------------
% 0. Housekeeping:
%----------------------------------------------------------------

close all;
clc;


%----------------------------------------------------------------
% 1. Define variables:
%----------------------------------------------------------------

var y, x, g, r, pi, a, e, z ;

varexo eps_r, eps_a, eps_e, eps_z ;

parameters beta, omega, psi, rho_pi, rho_g, rho_x, rho_a, rho_e, sig_r, sig_z, sig_a, sig_e ;


%----------------------------------------------------------------
% 2. Calibration:
%----------------------------------------------------------------

beta   = 0.99 ;
psi    = 0.1 ;
omega  = 0.0617 ;
rho_pi = 0.3597 ;
rho_g  = 0.2536 ;
rho_x  = 0.0347 ;
rho_a  = 0.9470 ;
rho_e  = 0.9625 ;
sig_a  = 0.0405 ;
sig_e  = 0.0012 ;
sig_z  = 0.0109 ;
sig_r  = 0.0031 ;


%----------------------------------------------------------------
% 3. The Model:
%----------------------------------------------------------------

model (linear) ;
	x  = x(+1) - ( r - pi(+1) ) + ( 1 - omega ) * ( 1 - rho_a ) * a ;
        pi = beta * pi(+1) + psi * x - e ;
        r  = r(-1) + rho_pi * pi + rho_g * g + rho_x * x + eps_r ;
        x  = y - omega * a ;
        g  = y - y(-1) + z ;
        a  = rho_a * a(-1) + eps_a ;
        e  = rho_e * e(-1) + eps_e ;
        z  = eps_z ;
end ;


%----------------------------------------------------------------
% 4. Computation:
%----------------------------------------------------------------


//steady;


%----------------------------------------------------------------
% 5. Declare Shocks:
%----------------------------------------------------------------

shocks ;
	var eps_a = sig_a^2 ;
	var eps_e = sig_e^2 ;
	var eps_z = sig_z^2 ;
	var eps_r = sig_r^2 ;
end ;


%----------------------------------------------------------------
% 6. Some Results:
%----------------------------------------------------------------
stoch_simul(hp_filter=1600, order=1, irf=40);

